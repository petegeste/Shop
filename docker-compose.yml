version: '3.9'

networks:
   frontend:
      driver: bridge
   backend:
      driver: bridge

volumes:
    image-cache:

services:
   shop-db:
      image: ${DOCKER_REGISTRY-}shop-db
      hostname: shopdb
      build:
         context: shop-db/
         dockerfile: Dockerfile
      environment:
         POSTGRES_USER: postgres
         POSTGRES_PASSWORD: app_password
         SHOP_DB_USER: postgres
         SHOP_DB_PWD: app_password
      ports:
      - 5432:5432
      networks:
      - backend

   shop-api:
      image: ${DOCKER_REGISTRY-}shop-api
      hostname: shopapi
      build:
         context: shop-api/
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Production
         SHOP_DB_HOST: "shopdb:5432"
         SHOP_DB_USER: "postgres"
         SHOP_DB_PWD: "app_password"
         ASPNETCORE_Kestrel__Certificates__Default__Password: "A#bu#H*IB@#8bIP@#XFVGLY**O2zg8p2efy2vfp23t77:"
         ASPNETCORE_Kestrel__Certificates__Default__Path: shop-api.pfx
         SHOP_MESSAGING_HOST: shopmessages
         SHOP_IMAGE_CACHE: "/image-cache"
      depends_on:
      - shop-db
      - shop-messages
      - shop-img-worker
      networks:
      - backend
      volumes:
      - image-cache:/image-cache

   shop-webapp:
      image: ${DOCKER_REGISTRY-}shop-webapp
      hostname: shopwebapp
      build:
         context: shop-webapp/
         dockerfile: Dockerfile
      environment:
         ASPNETCORE_ENVIRONMENT: Production
         SHOP_API_HOST: "http://shopapi"
      depends_on:
      - shop-db
      - shop-api
      networks:
      - backend

   shop-img-worker:
      image: ${DOCKER_REGISTRY-}shop-img-worker
      hostname: shopimgworker
      restart: always
      build:
         context: shop-img-worker/
         dockerfile: Dockerfile
      environment:
         SHOP_MESSAGING_HOST: shopmessages
         SHOP_IMAGE_CACHE: "/image-cache"
      depends_on:
         - shop-messages
      networks:
      - backend
      volumes:
      - image-cache:/image-cache

   shop-messages:
      image: rabbitmq:3
      hostname: shopmessages
      networks:
      - backend

   proxy:
      image: ${DOCKER_REGISTRY-}shop-proxy
      hostname: shopproxy
      build:
         context: proxy/
         dockerfile: Dockerfile
      ports:
         - 80:80
      depends_on:
      - shop-api
      - shop-webapp
      networks:
      - frontend
      - backend