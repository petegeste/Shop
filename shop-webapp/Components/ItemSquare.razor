@using shop;
@inject shop.ApiClient client

<div class="card mb-4 box-shadow" style="width: 18rem;">
    @if (Image is not null)
    {
        <img src="@Image.ThumbnailUrl" class="card-img-top" style="height: 225px; width: 100%; display: block; object-fit: cover"
        data-holder-rendered="true" alt="@Image.Description" />
    }
    <div class="card-body">
        @if (Image is not null)
        {
            <a href="/product/@Product.Id"><h5 class="card-text">@Product.Name</h5></a>
            <p class="card-text">@Product.Description</p>
            <div class="d-flex justify-content-between align-items-center">
                <small class="text-muted">$@Product.Price</small>
                <small class="text-muted">@Product.Inventory in stock.</small>
            </div>
        }
    </div>
</div>
@code {
    private ProductImageQueryResult? Image { get; set; } = null!;

    [Parameter]
    public shop.Product Product { get; set; } = null!;

    protected override async Task OnInitializedAsync()
    {
        var images = await client.ImagesAsync(Product.Id);
        Image = images.FirstOrDefault();
    }
}
